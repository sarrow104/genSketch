* todo

date:2016-03-22

======================================================================

现有的创建方式（使用），还是有些不灵活；

.tpl文件夹，还应该配套一个描述文件，用来说明，传入的变量，应该生成哪些${var}，以
便让.tpl文件夹内部的文件，如何使用；

比如，应该把 形如 genQtSketch qt/cmake p175.mvc-filesystemmodel 的第二个参数，就
交给这个描述文件。它就把这个参数，当做 ${Target}，作为后面的替换使用；

甚至，支持自定义定义脚本，以生成更复杂的东西，比如C++函数声明、某目录的文件列表
，等等；

感觉，比较类似CGI的工作；

----------------------------------------------------------------------

** 类xml的模板（CGI）

鉴于有可能需要更为复杂的模板生成需求：

 - qmake；自动生成源文件列表（join(glob(*.c), "\\\n")）；这意味着，可能的路径处
   理、循环操作；

 - 更详细的类模板补全（控制生成成员函数、成员变量）；细节，比如tagbar的访问控制
   标记：“#”、“-”，“+”；后缀式返回值；继承、包含关系（UML）；

然后，有xml配置，生成特定的补全设定语句penv::set()；最后由模板使用该penv::get()即可；

----------------------------------------------------------------------

至于更灵活的，生成声明和定义的stem（比如类似qtcreator，根据定义，添加声明；或者
，根据声明，添加定义），就没法用模板工具完成了，这必须要达到语法解析，工程管理（
知道如何找到匹配的源文件和头文件），才能完成；

----------------------------------------------------------------------

另外，貌似从语法上，和php的tpl文件接近？

----------------------------------------------------------------------

** 可执行脚本

执行脚本，并将脚本内容，作为目标文件的内容……

*** bash脚本模板

多行？
echo -e "
"

既然是脚本，就需要传递参数；

可以考虑使用环境变量；

至于调用模板的时候，可以参考makefile或者cmake；

前者，用的是

	make -f /path/to/makefile [ key=value]*

后者是

	cmake dir/path/to/find/CMakeLists.txt [-D${key}=value]*

两者有异曲同工之妙！

另外，需要注意的是，make也是用的“-”风格参数，用来给make本身用，用来控制其行为
；即，这种参数是make程序本身用的，而不是给makefile脚本用的；

cmake与之类似；不过，供脚本的参数，通过-D做了一下转换。相当于socket套接字的包装
。

为了方便，我还是用cmake的-D前缀把！

----------------------------------------------------------------------

** 模板工程的帮助和设置

date:2016-06-04

在使用基于多文件的模板系统，遇到了好几个问题；

模板本身的帮助，以及个性化的应用模板顺序（模板设置），两个比较相关。

最好模板可以按文件来单独发布。于是，帮助信息，以及个性化配置，最好都和其他文件放
在一起。

命名的话，可以为：

xxx.tpl/
 |-.tpl.help
 `-.tpl.config

.tpl.help
	存放基本的帮助信息；

.tpl.config
	存放自定义变量的设置；
	比如，原本$Target=目标名（传入的，get_command后的第二个参数）；通过，本
	文件，可以设定其他规则，以及特定的，默认变量名。

.tpl.order
	模板文件执行顺序的信息；
	优先级，可以参考linux的服务优先级设定――在服务名字前面，添加数字即可（
	貌似是在表示服务的文件名前面添加）。
	优先级定义域是【0-99】；默认是50；
	可以仅针对少数文件设定优先级。如果配置文件中，未设定优先级（此时为默认优
	先级50），或者设置的优先级相同，那么，优先级按照出现的先后顺序来确定。

	规则：
	优先级越大，越在后面执行。

	也就是说，本文件的使用规则是：

		数字 空格 文件名

	如果可以忽略前面的数字，怎么办？――即，模板文件名，就是纯数字，怎么办？

另外，如果子目录中出现了.tpl.help，.tpl.config这种文件，忽略之！

----------------------------------------------------------------------

FIXME 注意，文件夹需要单独处理――理论上，文件夹没有优先级……比如空的Debug

** 模板引用问题

date:2016-06-04

本身就是拼凑的模板――header,main,footer，比如内容分为这样的三块。

那么，形如：

	${(import xxx.tpl/xxxx)}

可行不？

不行吗？

不能简单的可行还是不可行！

这应该是类似于C语言宏的概念。这个引入的步骤，是先于PenMgr2的解析的。需要在解析之
前，完成替换！

----------------------------------------------------------------------

** 将 genQtProject功能迁移过来

（补template）

注意，genQtProject 有一个特性，是替换xxx.pro.user的时候，将内部用到的绝对路径，
替换为相对路径――相对输出路径而言；见：

/home/sarrow/project/genQtProject/main.cpp|69

这样的话，我这个 genSketch还有些难处理。

比较讨巧的办法是，使用命令行工具，创建一个相对路径的输出工具。然后，将这个计算，
提前到 .tpl.config 文件中。

在网上找了一下，最简单的办法是：

trackback:http://stackoverflow.com/questions/2564634/convert-absolute-path-into-relative-path-given-a-current-directory-using-bash

Using realpath 8.23 on Linux 3.18 is the simplest, I think:

$ realpath --relative-to="$file1" "$file2"

For example:

$ realpath --relative-to=/usr/bin/nmap /tmp/testing
../../../tmp/testing

对于ubuntu来说，sudo apt-get install realpath 即可！

----------------------------------------------------------------------

额，实测，realpath 版本不符！最后是手写了一个 relpath的小程序来完成任务。

----------------------------------------------------------------------

** 同步 vim插件 与 bin工具配套
